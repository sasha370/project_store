version: 2.1

orbs:
  ruby: circleci/ruby@0.1.2


executors:
  default:
    working_directory: ~/repo
    description: The official CircleCI Ruby Docker image
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
        environment:
          RAILS_ENV: test
          RACK_ENV: test
      - image: circleci/postgres:11.3-alpine
        environment:
          POSTGRES_USER: alex
          POSTGRES_HOST_AUTH_METHOD: trust

caches:
  - &bundle_cache v1-repo-{{ checksum "Gemfile.lock" }}
   
commands:
  yarn-install:
    description: "Install node_modules in your build."
    parameters:
      cache-folder-path:
        description: "The path of cache-folder"
        type: string
        default: "~/.cache/yarn"
    steps:
      - run:
          name: Yarn Install
          command: yarn install --cache-folder << parameters.cache-folder-path >>
  yarn-load-cache:
    description: "Load node_modules cached"
    parameters:
      key:
        description: "The cache key to use. The key is immutable."
        type: string
        default: "rails-demo-yarn-v1"
    steps:
      - restore_cache:
          keys:
            - << parameters.key >>-{{ checksum "yarn.lock"  }}
  yarn-save-cache:
    description: "Save node_modules to cache."
    parameters:
      key:
        description: "The cache key to use. The key is immutable."
        type: string
        default: "rails-demo-yarn-v1"
    steps:
      - save_cache:
          key: << parameters.key >>-{{ checksum "yarn.lock"  }}
          paths:
            - ~/.cache/yarn

jobs:
  build:
    executor: default
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - ruby/load-cache:
          key: rails-demo-bundle
      - ruby/bundle-install
      - ruby/save-cache:
          key: rails-demo-bundle
      # restore, install and save node_packages
      - yarn-load-cache
      - yarn-install
      - yarn-save-cache
  test:
    parallelism: 1
    executor: ruby_with_postgres
    steps:
      - checkout
      - ruby/load-cache:
          key: rails-demo-bundle
      - ruby/bundle-install
      - yarn-load-cache
      # Check DB status
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      # Setup database
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      # Run rspec in parallel
      - run:
          name: Prepare webpacker for tests
          command: bundle exec rails assets:precompile
      - run:
          name: run specs
          command: bundle exec rspec 

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
