name: Tests
on: push

jobs:
  run_linters:
    name: Run Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Run Rubocop
        run: |
          bundle exec rubocop --parallel

  run_tests:
    needs: [run_linters]
    name: Run Rspec
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: project_store_test
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      # if you need redis
      # redis:
      #   image: redis
      #   ports:
      #   - 6379:6379
      #   options: --entrypoint redis-server

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install yarn
        run: |
          yarn install --frozen-lockfile
      - name: install PostgreSQL client
        run: |
          sudo apt-get install libpq-dev

      - name: Setup test database
        env:
          RAILS_ENV: test
          PGHOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          PGPORT: ${ { job.services.postgres.ports[5432] }}
        run: |
          bundler exec rails db:create db:migrate
      - name: Run tests
        run: bundle exec rspec

      - name: Upload coverage results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-report
          path: coverage
